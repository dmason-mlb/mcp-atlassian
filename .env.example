# MCP-ATLASSIAN CONFIGURATION EXAMPLE
# -------------------------------------
# Copy this file to .env and fill in your details.

# =============================================
# ATLASSIAN INSTANCE URL
# =============================================
# REQUIRED: Replace with your Atlassian instance URL.
# For Cloud: https://your-company.atlassian.net
# For Server/DC: Use separate JIRA_URL and CONFLUENCE_URL below
ATLASSIAN_URL=https://your-company.atlassian.net

# Alternative: Set URLs individually (required for Server/DC)
# JIRA_URL=https://jira.your-company.com
# CONFLUENCE_URL=https://confluence.your-company.com

# =============================================
# AUTHENTICATION: CHOOSE ONE METHOD
# =============================================

# --- METHOD 1: API TOKEN (Recommended for Atlassian Cloud) ---
# Get API tokens from: https://id.atlassian.com/manage-profile/security/api-tokens
# This is the simplest and most reliable authentication method for Cloud deployments.
ATLASSIAN_EMAIL=your.email@example.com
ATLASSIAN_API_TOKEN=your_api_token

# --- METHOD 2: PERSONAL ACCESS TOKEN (Server / Data Center - Recommended) ---
# Create PATs in your Jira/Confluence profile settings (usually under "Personal Access Tokens").
#ATLASSIAN_PAT=your_personal_access_token

# --- METHOD 3: OAUTH 2.0 (Advanced - Atlassian Cloud Only) ---
# OAuth 2.0 provides enhanced security but is more complex to set up.
# For most users, Method 1 (API Token) is simpler and sufficient.
# 1. Create an OAuth 2.0 (3LO) app in Atlassian Developer Console:
#    https://developer.atlassian.com/console/myapps/
# 2. Set the Callback/Redirect URI in your app (e.g., http://localhost:8080/callback).
# 3. Grant necessary scopes (see ATLASSIAN_OAUTH_SCOPE below).
# 4. Run 'mcp-atlassian --oauth-setup -v' (or 'uvx mcp-atlassian@latest --oauth-setup -v').
#    This wizard will guide you through authorization and provide your ATLASSIAN_OAUTH_CLOUD_ID.
#    Tokens are stored securely (keyring or a local file in ~/.mcp-atlassian/).

# Required for --oauth-setup and for the server to use OAuth:
#ATLASSIAN_OAUTH_CLIENT_ID=your_oauth_client_id
#ATLASSIAN_OAUTH_CLIENT_SECRET=your_oauth_client_secret
#ATLASSIAN_OAUTH_REDIRECT_URI=http://localhost:8080/callback # Must match your app's redirect URI
#ATLASSIAN_OAUTH_SCOPE=read:jira-work write:jira-work read:confluence-space.summary read:confluence-content.all write:confluence-content offline_access

# Required for the server AFTER running --oauth-setup (this ID is printed by the setup wizard):
#ATLASSIAN_OAUTH_CLOUD_ID=your_atlassian_cloud_id_from_oauth_setup

# --- METHOD 4: BRING YOUR OWN TOKEN (BYOT) OAUTH (Advanced - Atlassian Cloud Only) ---
# Use this method when you have an externally managed OAuth access token.
#ATLASSIAN_OAUTH_CLOUD_ID=your_atlassian_cloud_id
#ATLASSIAN_OAUTH_ACCESS_TOKEN=your_pre_existing_oauth_access_token

# =============================================
# SERVER/DATA CENTER SPECIFIC SETTINGS
# =============================================
# Only applicable if your URLs point to Server/DC instances (not *.atlassian.net).
# Default is true. Set to false if using self-signed certificates (not recommended for production).
#ATLASSIAN_SSL_VERIFY=true

# Service-specific SSL settings (if different from global)
#JIRA_SSL_VERIFY=true
#CONFLUENCE_SSL_VERIFY=true

# =============================================
# OPTIONAL CONFIGURATION
# =============================================

# --- General Server Settings ---
# Transport mode for the MCP server. Default is 'stdio'.
# Options: stdio, sse, streamable-http
#TRANSPORT=stdio
# Port for HTTP transports. Default is 8000.
#PORT=8000
# Host for HTTP transports. Default is '0.0.0.0'.
#HOST=0.0.0.0

# --- Read-Only Mode ---
# Disables all write operations (create, update, delete). Default is false.
#READ_ONLY_MODE=false

# --- Logging Verbosity ---
# MCP_VERBOSE=true        # Enables INFO level logging (equivalent to 'mcp-atlassian -v')
# MCP_VERY_VERBOSE=true   # Enables DEBUG level logging (equivalent to 'mcp-atlassian -vv')
# MCP_LOGGING_STDOUT=true # Enables logging to stdout (logging.StreamHandler defaults to stderr)

# --- Tool Filtering ---
# Comma-separated list of tool names to enable. If not set, all tools are enabled.
#ENABLED_TOOLS=confluence_search,jira_get_issue

# --- Content Filtering ---
# Optional: Comma-separated list of Confluence space keys to limit searches and operations to.
#CONFLUENCE_SPACES_FILTER=DEV,TEAM,DOC
# Optional: Comma-separated list of Jira project keys to limit searches and operations to.
#JIRA_PROJECTS_FILTER=PROJ,DEVOPS

# --- ADF and Formatting Controls ---
# Control ADF (Atlassian Document Format) rollout for Cloud instances
#ATLASSIAN_ENABLE_ADF=true           # Force enable ADF globally
#ATLASSIAN_DISABLE_ADF=true          # Force disable ADF globally
#ATLASSIAN_ADF_ROLLOUT_PERCENTAGE=50 # Gradual rollout percentage (0-100)
#ATLASSIAN_ADF_ROLLOUT_USERS=user1,user2        # Users to include in rollout
#ATLASSIAN_ADF_ROLLOUT_EXCLUDE_USERS=legacy_bot # Users to exclude from rollout

# --- Proxy Configuration (Advanced) ---
# Global proxy settings (applies to both services unless overridden below).
#HTTP_PROXY=http://proxy.example.com:8080
#HTTPS_PROXY=https://user:pass@proxy.example.com:8443
#SOCKS_PROXY=socks5://proxy.example.com:1080
#NO_PROXY=localhost,127.0.0.1,.internal.example.com

# Service-specific proxy settings (these override global proxy settings).
#JIRA_HTTP_PROXY=http://jira-proxy.example.com:8080
#JIRA_HTTPS_PROXY=https://jira-proxy.example.com:8443
#CONFLUENCE_HTTP_PROXY=http://confluence-proxy.example.com:8080
#CONFLUENCE_HTTPS_PROXY=https://confluence-proxy.example.com:8443

# --- Custom HTTP Headers (Advanced) ---
# Service-specific custom headers.
#JIRA_CUSTOM_HEADERS=X-Jira-Service=mcp-integration,X-Custom-Auth=token
#CONFLUENCE_CUSTOM_HEADERS=X-Confluence-Service=mcp-integration,X-Custom-Auth=token

# =============================================
# LEGACY CONFIGURATION (Still Supported)
# =============================================
# These individual service settings are still supported for backward compatibility
# and are required for Server/DC deployments or when services have different credentials.

# Individual service credentials (fallback if ATLASSIAN_* not set)
#JIRA_USERNAME=your.email@example.com
#JIRA_API_TOKEN=your_jira_api_token
#JIRA_PERSONAL_TOKEN=your_jira_personal_access_token

#CONFLUENCE_USERNAME=your.email@example.com
#CONFLUENCE_API_TOKEN=your_confluence_api_token
#CONFLUENCE_PERSONAL_TOKEN=your_confluence_personal_access_token

# =============================================
# E2E TESTING CONFIGURATION
# =============================================
# Required for running E2E tests with 'npm run seed' and 'npm run test'

# REQUIRED: Jira project key where test issues will be created
JIRA_PROJECT=TEST

# REQUIRED: Confluence space key where test pages will be created  
CONFLUENCE_SPACE=TESTSPACE

# Optional: Custom MCP server URL for E2E tests (defaults to http://localhost:9000/mcp)
#MCP_URL=http://localhost:9000/mcp

# Optional: Custom label for E2E test artifacts (defaults to mcp-e2e-{pid})
#SEED_LABEL=my-custom-e2e-label

# Optional: Override URLs for E2E tests (usually derived from ATLASSIAN_URL)
#JIRA_BASE=https://your-company.atlassian.net
#CONFLUENCE_BASE=https://your-company.atlassian.net/wiki

# Multi-user HTTP transport credentials (for testing multi-tenant scenarios)
#USER_OAUTH_TOKEN=user_specific_oauth_token
#USER_CLOUD_ID=user_specific_cloud_id
